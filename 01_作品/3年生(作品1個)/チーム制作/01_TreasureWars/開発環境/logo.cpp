//==============================================================================
//
// logo.cpp	(ロゴ.cpp)
// Author : Saito Shian
//
//==============================================================================

//==============================================================================
// インクルード
//==============================================================================
#include "application.h"
#include "renderer.h"
#include "logo.h"
#include "entry.h"
#include "texture.h"
#include "result.h"

//==============================================================================
// 静的メンバ変数宣言
//==============================================================================
int CLogo::m_nScore = 0;

//==============================================================================
// コンストラクタ
//==============================================================================
CLogo::CLogo() : CObject2D(4)
{

}


//==============================================================================
// デストラクタ
//==============================================================================
CLogo::~CLogo()
{

}

//==============================================================================
// 初期化処理
//==============================================================================
HRESULT CLogo::Init()
{
	//objectXの初期化処理
	CObject2D::Init();

	//==================================================
	// メンバ変数の初期化
	//==================================================
	m_move = D3DXVECTOR3(0.0f, 6.0f, 0.0f);

	SetTexture(CTexture::TEXTURE_RANK);

	SetAlpha(0.0f);

	// 順位を反映
	for (int nCnt = 0; nCnt < 4; nCnt++)
	{
		if (m_fMaxMoving == CResult::Moving_Piller[nCnt])
		{
			SetTexPos(0.0f, 1.0f, 0.25f * (nCnt + 1), 0.25f * nCnt);

			// 位置を反転させる
			m_fMaxMoving = CResult::Moving_Piller[3 - nCnt] - 30.0f;
			break;
		}
	}

	return S_OK;
}

//==============================================================================
// 更新処理
//==============================================================================
void CLogo::Update()
{
	// フラグが建っていない場合
	if (CResult::GetFlag() == false)
	{
		//ロゴの挙動
		LogoBehavior();
	}
	else
	{
		m_nAlpha += 0.01f;
		SetAlpha(m_nAlpha);
	}

	//objectXの更新処理
	CObject2D::Update();
}

//==============================================================================
// 挙動処理
//==============================================================================
void CLogo::LogoBehavior()
{
	//位置の取得
	D3DXVECTOR3 pos = Getposition();

	if (pos.y >= m_fMaxMoving)
	{
		pos -= m_move;
	}
	else
	{
		m_move = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	}

	//位置の設定
	Setposition(pos);
}

//==============================================================================
// 生成処理
//==============================================================================
CLogo *CLogo::Create(D3DXVECTOR3 pos, float xsize, float ysize, float moving)
{
	CLogo *plogo = nullptr;

	plogo = new CLogo;

	if (plogo != nullptr)
	{
		plogo->Setposition(pos);
		plogo->SetSize(xsize, ysize);
		plogo->m_fMaxMoving = moving;
		plogo->Init();
	}

	return plogo;
}
