//==============================================================================================
//
// フィーバータイム　　　fever_time.cpp
// tutida ryousei
//
//==============================================================================================
#include"fever_time.h"
#include"application.h"
#include"game.h"
#include"time.h"
#include"scoreitem.h"

//==============================================================================================
// コンストラクタ
//==============================================================================================
CFever_Time::CFever_Time()
{
}

//==============================================================================================
// デストラクタ
//==============================================================================================
CFever_Time::~CFever_Time()
{
}

//==============================================================================================
// 初期化処理
//==============================================================================================
HRESULT CFever_Time::Init()
{
	m_bFever = true;	// フィーバータイム中か

	// 宝石を生成する間隔
	m_nCreate_CoolTime = m_nCreate_CoolTime_Base;

	return S_OK;
}

//==============================================================================================
// 終了処理
//==============================================================================================
void CFever_Time::Uninit()
{
	// オブジェクトの解放
	Release();
}

//==============================================================================================
// 更新処理
//==============================================================================================
void CFever_Time::Update()
{
	// ゲーム中の場合
	if (CApplication::GetGameStart())
	{
		// フィーバータイム
		Fever_Time();
	}
	// フィーバータイムを止める
	else
	{
		m_bFever = false;
	}
}

//==============================================================================================
// 描画処理
//==============================================================================================
void CFever_Time::Draw()
{
}

//==============================================================================================
// 生成処理
//==============================================================================================
CFever_Time *CFever_Time::Create(const int fevertime, const int cooltime)
{
	CFever_Time * pFever_Time = nullptr;

	pFever_Time = new CFever_Time;

	if (pFever_Time != nullptr)
	{
		pFever_Time->SetFeverStart(fevertime);			// フィーバーが始まる時間
		pFever_Time->SetCreateCoolTimeBase(cooltime);	// 宝石を生成する間隔
		pFever_Time->Init();	// 初期化処理
	}

	return pFever_Time;
}

//==============================================================================================
// フィーバータイム
//==============================================================================================
void CFever_Time::Fever_Time()
{
	// 宝石を生成する間隔
	m_nCreate_CoolTime--;

	if (m_nCreate_CoolTime <= 0)
	{
		// 宝石が出る位置
		D3DXVECTOR3 GemPos = { 0.0f,0.0f,0.0f };

		GemPos.x = (float)(rand() % (1400) - 700) + 800;	//xの範囲にランダム
		GemPos.y = (float)(rand() % 200 + 100);				//yの範囲にランダム
		GemPos.z = (float)(rand() % (1400) - 700) + 800;	//zの範囲にランダム

		// ランダムに宝石をばら撒く処理
		CScoreItem::RandomCreate(GemPos);

		// 宝石を生成する間隔の更新
		m_nCreate_CoolTime = m_nCreate_CoolTime_Base;
	}
}